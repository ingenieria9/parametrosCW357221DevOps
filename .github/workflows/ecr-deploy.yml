name: Build and Deploy Lambda Image to ECR

on:
  workflow_dispatch:
#on:
#  push:
#    branches:
#      - main
#    paths:
#        - 'src/file_converter_ecr_image/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-west-2        
      ECR_REPOSITORY: libreoffice-converter
      #IMAGE_TAG: latest
      CDK_STACK_NAME: CW357221ParametrosDevOps-LambdaEcrS3TriggerStack
      IMAGE_TAG : ${{ github.sha }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-west-2"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          docker build \
            -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} \
            -f src/file_converter_ecr_image/Dockerfile \
            src/file_converter_ecr_image
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Install CDK and dependencies
        run: |
          pip install -r infra/requirements.txt
          npm install -g aws-cdk

      - name: Synthesize CDK
        working-directory: infra
        run: cdk synth ${{ env.CDK_STACK_NAME }}   
        env:
          DB_HOST: ${{ secrets.LAMBDA_DB_HOST }}
          DB_USER: ${{ secrets.LAMBDA_DB_USER }}
          DB_PASSWORD: ${{ secrets.LAMBDA_DB_PASSWORD }}
          ARCGIS_CLIENT_ID : ${{secrets.ARCGIS_CLIENT_ID}}
          ARCGIS_CLIENT_SECRET : ${{secrets.ARCGIS_CLIENT_SECRET}}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}         

      - name: Deploy CDK stack
        working-directory: infra
        run: cdk deploy ${{ env.CDK_STACK_NAME }} --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-west-2"
          DB_HOST: ${{ secrets.LAMBDA_DB_HOST }}
          DB_USER: ${{ secrets.LAMBDA_DB_USER }}
          DB_PASSWORD: ${{ secrets.LAMBDA_DB_PASSWORD }}  
          ARCGIS_CLIENT_ID : ${{secrets.ARCGIS_CLIENT_ID}}
          ARCGIS_CLIENT_SECRET : ${{secrets.ARCGIS_CLIENT_SECRET}}          
          IMAGE_TAG: ${{ env.IMAGE_TAG }}